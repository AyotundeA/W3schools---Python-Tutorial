W3 Schools Python - Variable Names
Variable Names
A variable can have a short name (like x and y) or a more descriptive name (age, carname, total_volume).
Rules for Python variables:
A variable name must start with a letter or the underscore character
A variable name cannot start with a number
A variable name can only contain alpha-numeric characters and underscores (A-z, 0-9, and _ )
Variable names are case-sensitive (age, Age and AGE are three different variables)
A variable name cannot be any of the Python keywords.
Example 
Legal variable names:
myvar = "John"
my_var = "John"
_my_var = "John"
myVar = "John"
MYVAR = "John"
myvar2 = "John"
Example
Illegal variable names:
2myvar = "John"
my-var = "John"
my var = "John"
Remember that variable names are case-sensitive
Multi Words Variable Names
Variable names with more than one word can be difficult to read.
There are several techniques you can use to make them more readable:
Camel Case
Each word, except the first, starts with a capital letter:
myVariableName = "John"
Pascal Case
Each word starts with a capital letter:
MyVariableName = "John"
Snake Case
Each word is separated by an underscore character:
my_variable_name = "John"
Keywords:
Legal Variable Names - Legal variable names follow Python’s naming rules and do not conflict with reserved keywords.
Illegal Variable Names - These violate the naming rules and will cause a SyntaxError or unexpected behaviour.
SyntaxError - A SyntaxError is an error that occurs when Python code is written incorrectly—meaning it does not follow the rules (syntax) of the Python language.
Syntax - Syntax is the set of rules that define how you must write code in Python so that the interpreter can understand and execute it. Think of syntax like grammar in a language—if you don’t follow it, your sentence (or code) won’t make sense.

